// This package holds first-level wrappers for pgx + sqlc.
//
// The .sql templates live here, which sqlc uses to generate its code.
package db

import (
	"context"
	"pgx-sqlc/db/sqlc"

	"github.com/jackc/pgx/v5/pgxpool"
)

// Wraps sqlc Queries struct alongside pgxpool.
// NOTE: both share the *pgxpool.Pool
// https://remvn.dev/posts/writing-raw-sql-easier-with-pgx-and-sqlc-in-go/
//
// TODO: singelton protection?
// https://donchev.is/post/working-with-postgresql-in-go-using-pgx/
type Database struct {
	// This is for sqlc generated queries:
	Sqlc *sqlc.Queries
	// This is for raw access to the Pool, for pgx queries not covered by sqlc:
	Pool *pgxpool.Pool
}

func NewDatabase(ctx context.Context, db_url string) (*Database, error) {
	pool, err := pgxpool.New(ctx, db_url)
	if err != nil {
		return nil, err
	}
	if err := pool.Ping(ctx); err != nil {
		return nil, err
	}
	// this is generated by sqlc cli
	s := sqlc.New(pool)
	database := Database{
		Pool: pool,
		Sqlc: s,
	}
	return &database, nil
}
