package sqlc

import (
	"context"
	"log"

	"github.com/jackc/pgx/v5/pgxpool"
)

// This is some convenience code wrapping up pgxpool for use with sqlc output.
// https://remvn.dev/posts/writing-raw-sql-easier-with-pgx-and-sqlc-in-go/
// TODO: this provides a singelton protection:
// https://donchev.is/post/working-with-postgresql-in-go-using-pgx/
type Database struct {
	Pool  *pgxpool.Pool
	Query *Queries
}

func NewDatabase(ctx context.Context, db_url string) *Database {
	// this only create pgxpool struct, you may need to ping the database to
	// grab a connection and check availability
	pool, err := pgxpool.New(ctx, db_url)
	if err != nil {
		log.Fatal(err)
	}

	// this is generated by sqlc cli
	query := New(pool)

	database := Database{
		Pool:  pool,
		Query: query,
	}
	return &database
}
