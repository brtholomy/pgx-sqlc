package pages

import (
	"pgx-sqlc/ui/layouts"
	"pgx-sqlc/ui/templui/components/button"
	"pgx-sqlc/ui/templui/components/form"
	"pgx-sqlc/ui/templui/components/selectbox"
	"pgx-sqlc/ui/templui/components/table"
)

type InvoiceItem struct {
	Product Product
	// TODO: markup?
	// Amount string
}

templ Invoice(items []InvoiceItem, products []Product) {
	@layouts.BaseLayout() {
		@DisplayInvoice(items)
		@AddProduct(products)
	}
}

templ DisplayInvoice(items []InvoiceItem) {

	@table.Table(
		table.Props{ ID: "products-table", }) {
			@table.Caption() {
				Invoice items
			}
			@table.Header() {
				@table.Row() {
					@table.Head() {
						Name
					}
					@table.Head() {
						Price
					}
				}
			}
			@table.Body() {

				for _, i := range items {
					@table.Row() {
						@table.Cell() {
							{i.Product.Name}
						}
						@table.Cell() {
							{i.Product.Price}
						}
					}
				}
			}
		}
}

templ AddProduct(products []Product) {

	<div class="w-full max-w-sm">
			<form
			 action="/invoice"
			 method="POST"
			 hx-post="/invoice"
			 hx-select="#products-table"
			 hx-target="#products-table"
			 hx-swap="innerHTML"
				>

				@form.Item() {
					@form.Label(form.LabelProps{
						For: "select-form",
					}) {
						Product
					}
					@selectbox.SelectBox() {
						@selectbox.Trigger(selectbox.TriggerProps{
							ID:       "select-form",
							Name:     "product",
							Required: true,
							HasError: true,
						}) {
							@selectbox.Value(selectbox.ValueProps{
								Placeholder: "Select a product",
							})
						}
						@selectbox.Content() {

							for _, p := range products {

								@selectbox.Item(selectbox.ItemProps{
									Value: p.ID,
								}) {
									{p.Name}
								}
							}
						}
					}
					@form.Description() {
						Add from your product library
					}
					@button.Button(button.Props{
						Type:  button.TypeSubmit,
						Class: "flex items-center gap-2",
					}) {
						Submit
					}
					@form.Message(form.MessageProps{
						Variant: form.MessageVariantError,
					}) {
						A selection is required.
					}
				}

			</form>
		</div>
}
