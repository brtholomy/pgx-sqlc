package layouts

import (
	"pgx-sqlc/ui/modules"
	"pgx-sqlc/ui/templui/components/popover"
	"pgx-sqlc/ui/templui/components/selectbox"
	"pgx-sqlc/ui/templui/components/input"
	"pgx-sqlc/ui/templui/components/label"
)

templ ThemeSwitcherScript() {
	{{ handle := templ.NewOnceHandle() }}
	@handle.Once() {
		<script nonce={ templ.GetNonce(ctx) }>
			// Initial theme setup
			document.documentElement.classList.toggle('dark', localStorage.getItem('appTheme') === 'dark');

			document.addEventListener('alpine:init', () => {
				Alpine.data('themeHandler', () => ({
					isDark: localStorage.getItem('appTheme') === 'dark',
					themeClasses() {
						return this.isDark ? 'text-white' : 'bg-white text-black'
					},
					toggleTheme() {
						this.isDark = !this.isDark;
						localStorage.setItem('appTheme', this.isDark ? 'dark' : 'light');
						document.documentElement.classList.toggle('dark', this.isDark);
					}
				}))
			})
		</script>
	}
}

// https://templui.io/docs/how-to-use#htmx-integration
templ HtmxInit() {
	<script>
		// Re-initialize templUI components after HTMX swaps
		document.body.addEventListener("htmx:afterSwap", (e) => {
		if (window.templUI) {
		Object.values(window.templUI).forEach(comp => {
        comp.init?.(e.detail.elt);
		});
		}
		});

		// Re-initialize components after out-of-band swaps
		document.body.addEventListener("htmx:oobAfterSwap", (e) => {
		if (window.templUI) {
		Object.values(window.templUI).forEach(comp => {
        comp.init?.(e.detail.target);
		});
		}
		});

		// Cleanup before swap (for components with event listeners)
		document.body.addEventListener("htmx:beforeSwap", (e) => {
		if (window.templUI) {
		Object.values(window.templUI).forEach(comp => {
        comp.cleanup?.(e.detail.target);
		});
		}
		});
	</script>
}

templ BaseLayout() {
	<!DOCTYPE html>
	<html lang="en" class="h-full dark">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<!-- Tailwind CSS (output) -->
			<link href="/ui/assets/css/output.css" rel="stylesheet"/>
			<!-- Alpine.js -->
			<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<!-- HTMX -->
			<script src="https://unpkg.com/htmx.org@2.0.4" integrity="sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+" crossorigin="anonymous"></script>
			@HtmxInit()
			<!-- Theme switcher script -->
			@ThemeSwitcherScript()
			<!-- component scripts -->
			@input.Script()
			@label.Script()
			@selectbox.Script()
			@popover.Script()
		</head>
		<body
		 x-data="themeHandler"
		 x-bind:class="themeClasses"
			>
			@modules.Navbar()
			{ children... }
		</body>
	</html>
}
